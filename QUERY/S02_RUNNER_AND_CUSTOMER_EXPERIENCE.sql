-- SECTION B : RUNNER AND CUSTOMER EXPERIENCE
;

-- 01 HOW MANY RUNNERS SIGNED UP FOR EACH 1 WEEK PERIOD? (I.E. WEEK STARTS 2021-01-01)
SELECT
    DATE_ADD(
        DATE_SUB(
            REGISTRATION_DATE,
            INTERVAL (WEEKDAY(REGISTRATION_DATE)) DAY
        ),
        INTERVAL 4 DAY
    ) AS WEEK,
    COUNT(RUNNER_ID) AS RUNNERS
FROM
    RUNNERS
GROUP BY
    WEEK;

-- 02 WHAT WAS THE AVERAGE TIME IN MINUTES IT TOOK FOR EACH RUNNER TO ARRIVE AT THE PIZZA RUNNER HQ TO PICKUP THE ORDER?
-- FIRST WE NEED TO CHANGE THE DATA TYPE OF PICKUP_TIME FROM TEXT TO DATE TIME
SELECT
    ORDER_TIME,
    CAST(PICKUP_TIME AS DATETIME) AS PICKUP_TIME,
    TIMESTAMPDIFF(MINUTE, ORDER_TIME, PICKUP_TIME) AS TIME_DIFF_MINUTES
FROM
    RUNNER_ORDERS AS RO
    INNER JOIN CUSTOMER_ORDERS AS CO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    PICKUP_TIME IS NOT NULL
    AND PICKUP_TIME <> 'NULL';

--
SELECT
    RO.RUNNER_ID,
    AVG(TIMESTAMPDIFF(MINUTE, ORDER_TIME, PICKUP_TIME)) AS AVG_TIME_DIFF_MINUTES
FROM
    RUNNER_ORDERS AS RO
    INNER JOIN CUSTOMER_ORDERS AS CO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    PICKUP_TIME IS NOT NULL
    AND PICKUP_TIME <> 'NULL'
GROUP BY
    RO.RUNNER_ID;

-- 03 IS THERE ANY RELATIONSHIP BETWEEN THE NUMBER OF PIZZAS AND HOW LONG THE ORDER TAKES TO PREPARE?
SELECT
    CO.ORDER_ID,
    COUNT(CO.PIZZA_ID) AS NO_OF_PIZZAS,
    MAX(TIMESTAMPDIFF(MINUTE, ORDER_TIME, PICKUP_TIME)) AS PREP_TIME
FROM
    RUNNER_ORDERS AS RO
    INNER JOIN CUSTOMER_ORDERS AS CO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    PICKUP_TIME IS NOT NULL
    AND PICKUP_TIME <> 'NULL'
GROUP BY
    CO.ORDER_ID;

--
WITH CTE AS (
    SELECT
        CO.ORDER_ID,
        COUNT(CO.PIZZA_ID) AS NO_OF_PIZZAS,
        MAX(TIMESTAMPDIFF(MINUTE, ORDER_TIME, PICKUP_TIME)) AS PREP_TIME
    FROM
        RUNNER_ORDERS AS RO
        INNER JOIN CUSTOMER_ORDERS AS CO ON RO.ORDER_ID = CO.ORDER_ID
    WHERE
        PICKUP_TIME IS NOT NULL
        AND PICKUP_TIME <> 'NULL'
    GROUP BY
        CO.ORDER_ID
)
SELECT
    NO_OF_PIZZAS,
    AVG(PREP_TIME) AS AVG_PREP_TIME
FROM
    CTE
GROUP BY
    NO_OF_PIZZAS;

-- 04 WHAT WAS THE AVERAGE DISTANCE TRAVELED FOR EACH CUSTOMER?
-- THE DISTANCE COLUMN IS NOT STANDARDIZED 
SELECT
    CO.CUSTOMER_ID,
    CAST(
        TRIM(REPLACE(DISTANCE, 'km', '')) AS DECIMAL(10, 2)
    ) AS DISTANCE_NUMERIC
FROM
    RUNNER_ORDERS AS RO
    INNER JOIN CUSTOMER_ORDERS AS CO ON CO.ORDER_ID = RO.ORDER_ID
WHERE
    DISTANCE IS NOT NULL
    AND DISTANCE <> 'NULL';

--
WITH CTE AS (
    SELECT
        CO.CUSTOMER_ID,
        CAST(
            TRIM(REPLACE(DISTANCE, 'km', '')) AS DECIMAL(10, 2)
        ) AS DISTANCE_NUMERIC
    FROM
        RUNNER_ORDERS AS RO
        INNER JOIN CUSTOMER_ORDERS AS CO ON CO.ORDER_ID = RO.ORDER_ID
    WHERE
        DISTANCE IS NOT NULL
        AND DISTANCE <> 'NULL'
)
SELECT
    CUSTOMER_ID,
    AVG(DISTANCE_NUMERIC) AS 'AVG_DISTANCE'
FROM
    CTE
GROUP BY
    CUSTOMER_ID;

-- 05 WHAT WAS THE DIFFERENCE BETWEEN THE LONGEST AND SHORTEST DELIVERY TIME?
SELECT
    CAST(
        REGEXP_REPLACE(DURATION, '[^0-9]', '') AS UNSIGNED
    ) AS DURATION_NUMERIC
FROM
    RUNNER_ORDERS
WHERE
    DURATION IS NOT NULL
    AND DURATION <> 'NULL';

--
SELECT
    MAX(
        CAST(
            REGEXP_REPLACE(DURATION, '[^0-9]', '') AS UNSIGNED
        )
    ) - MIN(
        CAST(
            REGEXP_REPLACE(DURATION, '[^0-9]', '') AS UNSIGNED
        )
    ) AS TIMEDIFF
FROM
    RUNNER_ORDERS
WHERE
    DURATION IS NOT NULL
    AND DURATION <> 'NULL';

-- 06 WHAT WAS THE AVERAGE SPEED FOR EACH RUNNER FOR EACH DELIVERY AND DO YOU NOTICE ANY TREND FOR THESE VALUES?
SELECT
    RUNNER_ID,
    CAST(
        TRIM(REPLACE(DISTANCE, 'km', '')) AS DECIMAL(10, 2)
    ) AS DISTANCE_NUMERIC / CAST(
        REGEXP_REPLACE(DURATION, '[^0-9]', '') AS UNSIGNED
    ) AS SPEED
FROM
    RUNNER_ORDERS
WHERE
    DURATION IS NOT NULL
    AND DURATION <> 'NULL';

--
SELECT
    RUNNER_ID,
    CAST(
        TRIM(REPLACE(DISTANCE, 'km', '')) AS DECIMAL(10, 2)
    ) / CAST(
        REGEXP_REPLACE(DURATION, '[^0-9]', '') AS UNSIGNED
    ) AS SPEED
FROM
    RUNNER_ORDERS
WHERE
    DURATION IS NOT NULL
    AND DURATION <> 'NULL';

-- 07 WHAT IS THE SUCCESSFUL DELIVERY PERCENTAGE FOR EACH RUNNER?
SELECT
    RUNNER_ID,
    COUNT(ORDER_ID) AS ORDERS,
    SUM(
        CASE
            WHEN PICKUP_TIME = 'NULL' THEN 0
            ELSE 1
        END
    ) / COUNT(ORDER_ID) AS DELIVERY_PERCENTAGE
FROM
    RUNNER_ORDERS
GROUP BY
    RUNNER_ID;