-- SECTION A : PIZZA METRICS
;

-- 01 HOW MANY PIZZAS WERE ORDERED?
SELECT
    COUNT(*) AS PIZZAS_ORDERED
FROM
    CUSTOMER_ORDERS;

-- 02 HOW MANY UNIQUE CUSTOMER ORDERS WERE MADE?
SELECT
    COUNT(DISTINCT(ORDER_ID)) AS UNIQUE_CUSTOMERS_ORDERS
FROM
    CUSTOMER_ORDERS;

-- 03 HOW MANY SUCCESSFUL ORDERS WERE DELIVERED BY EACH RUNNER?
SELECT
    RUNNER_ID,
    COUNT(DISTINCT(ORDER_ID)) AS DELIVERED_ORDERS
FROM
    RUNNER_ORDERS AS RO
WHERE
    PICKUP_TIME IS NOT NULL
GROUP BY
    RUNNER_ID;

-- 04 HOW MANY OF EACH TYPE OF PIZZA WAS DELIVERED?
SELECT
    PN.PIZZA_NAME,
    COUNT(CO.PIZZA_ID) AS PIZZA_DELIVERED
FROM
    RUNNER_ORDERS AS RO
    INNER JOIN CUSTOMER_ORDERS AS CO ON RO.ORDER_ID = CO.ORDER_ID
    INNER JOIN PIZZA_NAMES AS PN ON CO.PIZZA_ID = PN.PIZZA_ID
WHERE
    PICKUP_TIME IS NOT NULL
GROUP BY
    PN.PIZZA_NAME;

-- 05 HOW MANY VEGETARIAN AND MEATLOVERS WERE ORDERED BY EACH CUSTOMER?
SELECT
    CO.CUSTOMER_ID,
    PN.PIZZA_NAME,
    COUNT(CO.PIZZA_ID) AS PIZZAS_ORDERED
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN PIZZA_NAMES AS PN ON CO.PIZZA_ID = PN.PIZZA_ID
GROUP BY
    CO.CUSTOMER_ID,
    PN.PIZZA_NAME;

-- 06 WHAT WAS THE MAXIMUM NUMBER OF PIZZAS DELIVERED IN A SINGLE ORDER?
SELECT
    CO.ORDER_ID,
    COUNT(CO.PIZZA_ID) AS PIZZAS_ORDERED
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN RUNNER_ORDERS AS RO ON CO.ORDER_ID = RO.ORDER_ID
WHERE
    PICKUP_TIME IS NOT NULL
GROUP BY
    CO.ORDER_ID
ORDER BY
    COUNT(CO.PIZZA_ID) DESC
LIMIT
    1;

-- 07 FOR EACH CUSTOMER, HOW MANY DELIVERED PIZZAS HAD AT LEAST 1 CHANGE AND HOW MANY HAD NO CHANGES?
-- HERE WE CAN FOLLOW 2 APPROACHES 
;

-- a. TO CLEAN THE DATA FIRST 
-- b. TO USE SOME OF THE LENGTH FUNCTIONS & CASES
-- EXCLUSIONS
SELECT
    ORDER_ID,
    EXCLUSIONS,
    EXTRAS,
    EXCLUSIONS IS NOT NULL
    AND LENGTH(EXCLUSIONS) > 0
FROM
    CUSTOMER_ORDERS;

-- 0 -> NULL OR BLANK
-- 1 -> FILLED
;

-- EXCLUSIONS AND EXTRAS
-- NULL
-- 'NULL' -> EMPTY STRING
SELECT
    CO.CUSTOMER_ID,
    (
        (
            CO.EXTRAS IS NOT NULL
            AND CO.EXTRAS <> 'NULL'
            AND LENGTH(CO.EXTRAS) > 0
        )
        OR (
            CO.EXCLUSIONS IS NOT NULL
            AND CO.EXCLUSIONS <> 'NULL'
            AND LENGTH(CO.EXCLUSIONS) > 0
        )
    ) AS CHANGES
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN RUNNER_ORDERS AS RO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    RO.PICKUP_TIME IS NOT NULL
    AND RO.PICKUP_TIME <> 'NULL';

-- 
SELECT
    CO.CUSTOMER_ID,
    SUM(
        CASE
            WHEN (
                (
                    CO.EXTRAS IS NOT NULL
                    AND LENGTH(CO.EXTRAS) > 0
                )
                AND (
                    CO.EXCLUSIONS IS NOT NULL
                    AND LENGTH(CO.EXCLUSIONS) > 0
                )
            ) THEN 1
            ELSE 0
        END
    ) AS CHANGES,
    SUM(
        CASE
            WHEN (
                (
                    CO.EXTRAS IS NULL
                    OR LENGTH(CO.EXTRAS) = 0
                )
                AND (
                    CO.EXCLUSIONS IS NULL
                    OR LENGTH(CO.EXCLUSIONS) = 0
                )
            ) THEN 1
            ELSE 0
        END
    ) AS NO_CHANGES
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN RUNNER_ORDERS AS RO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    RO.PICKUP_TIME IS NOT NULL
    AND RO.PICKUP_TIME <> 'NULL'
GROUP BY
    CO.CUSTOMER_ID;

-- 08 HOW MANY PIZZAS WERE DELIVERED THAT HAD BOTH EXCLUSIONS AND EXTRAS?
SELECT
    CO.ORDER_ID,
    CO.EXCLUSIONS,
    CO.EXTRAS,
    (
        CO.EXTRAS IS NOT NULL
        AND CO.EXTRAS <> 'NULL'
        AND LENGTH(CO.EXTRAS) > 0
    )
    AND (
        CO.EXCLUSIONS IS NOT NULL
        AND CO.EXCLUSIONS <> 'NULL'
        AND LENGTH(CO.EXCLUSIONS) > 0
    ) AS ANY_CHANGE
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN RUNNER_ORDERS AS RO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    RO.PICKUP_TIME IS NOT NULL
    AND RO.PICKUP_TIME <> 'NULL';

-- 
SELECT
    COUNT(PIZZA_ID) AS PIZZAS_DELIVERED_WITH_EXCLUSION_AND_EXTRAS
FROM
    CUSTOMER_ORDERS AS CO
    INNER JOIN RUNNER_ORDERS AS RO ON RO.ORDER_ID = CO.ORDER_ID
WHERE
    RO.PICKUP_TIME IS NOT NULL
    AND RO.PICKUP_TIME <> 'NULL'
    AND (
        CO.EXTRAS IS NOT NULL
        AND CO.EXTRAS <> 'NULL'
        AND LENGTH(CO.EXTRAS) > 0
    )
    AND (
        CO.EXCLUSIONS IS NOT NULL
        AND CO.EXCLUSIONS <> 'NULL'
        AND LENGTH(CO.EXCLUSIONS) > 0
    );

-- 09 WHAT WAS THE TOTAL VOLUME OF PIZZAS ORDERED FOR EACH HOUR OF THE DAY?
SELECT
    HOUR(ORDER_TIME) AS HOUR,
    COUNT(PIZZA_ID) AS PIZZAS_ORDERED
FROM
    CUSTOMER_ORDERS
GROUP BY
    HOUR(ORDER_TIME)
ORDER BY
    1;

-- 10 WHAT WAS THE VOLUME OF ORDERS FOR EACH DAY OF THE WEEK?
SELECT
    DAYOFWEEK(ORDER_TIME) AS DAY_OF_WEEK,
    COUNT(PIZZA_ID) AS PIZZAS_ORDERED
FROM
    CUSTOMER_ORDERS
GROUP BY
    DAYOFWEEK(ORDER_TIME)
ORDER BY
    DAY_OF_WEEK;